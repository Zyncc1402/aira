generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  email     String   @unique
  phone     String?
  password  String?
  cart      Cart?
  role      String   @default("Client")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id     String      @id @default(auto()) @map("_id") @db.ObjectId
  user   User        @relation(fields: [userId], references: [id])
  userId String      @unique @db.ObjectId
  items  CartItems[]
}

model CartItems {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  cartId    String  @db.ObjectId
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  size      String
  quantity  Int     @default(1)
}

model Product {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  price        Int
  images       String[]
  salePrice    Int?
  category     String
  isArchived   Boolean     @default(false)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  CartItems    CartItems[]
  quantity     quantity?
  color        String[]
  fabric       String?
  transpareny  String?
  weavePattern String?
  fit          String?
}

model quantity {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String  @unique @db.ObjectId
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  sm        Int     @default(0)
  md        Int     @default(0)
  lg        Int     @default(0)
  xl        Int     @default(0)
}
